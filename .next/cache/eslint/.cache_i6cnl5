[{"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/_app.tsx":"1","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/api/hello.ts":"2","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/index.tsx":"3","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/index.tsx":"4","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/search/index.tsx":"5","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/background.tsx":"6","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/navigator.tsx":"7","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/plant-box.tsx":"8","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/plant-data-box.tsx":"9","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/_document.tsx":"10","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/diary/create.tsx":"11","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/diary/index.tsx":"12","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/index.tsx":"13","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/timelapse/index.tsx":"14","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/search/[id].tsx":"15","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/api.ts":"16","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/back.tsx":"17","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/diary-box.tsx":"18"},{"size":941,"mtime":1653913644983,"results":"19","hashOfConfig":"20"},{"size":307,"mtime":1652373863013,"results":"21","hashOfConfig":"20"},{"size":25243,"mtime":1656260200892,"results":"22","hashOfConfig":"20"},{"size":919,"mtime":1653908704358,"results":"23","hashOfConfig":"20"},{"size":2757,"mtime":1656262355771,"results":"24","hashOfConfig":"20"},{"size":423,"mtime":1652776610427,"results":"25","hashOfConfig":"20"},{"size":4708,"mtime":1653921087236,"results":"26","hashOfConfig":"20"},{"size":5203,"mtime":1656250785436,"results":"27","hashOfConfig":"20"},{"size":913,"mtime":1653896735001,"results":"28","hashOfConfig":"20"},{"size":769,"mtime":1653382027786,"results":"29","hashOfConfig":"20"},{"size":2740,"mtime":1656261912961,"results":"30","hashOfConfig":"20"},{"size":2213,"mtime":1653918822281,"results":"31","hashOfConfig":"20"},{"size":7386,"mtime":1656262087386,"results":"32","hashOfConfig":"20"},{"size":3176,"mtime":1653997845220,"results":"33","hashOfConfig":"20"},{"size":2279,"mtime":1656262302852,"results":"34","hashOfConfig":"20"},{"size":2184,"mtime":1656260084939,"results":"35","hashOfConfig":"20"},{"size":591,"mtime":1653913695914,"results":"36","hashOfConfig":"20"},{"size":954,"mtime":1653916886792,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y6hgfj",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/_app.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/api/hello.ts",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/index.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/index.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/search/index.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/background.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/navigator.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/plant-box.tsx",["97"],[],"import React, { useState } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\ninterface IPlantBoxProps {\n  num: number;\n  src: string;\n  district: string;\n  title: string;\n  isWatered: boolean;\n  isLighted: boolean;\n}\n\nconst PlantBox: React.FC<IPlantBoxProps> = ({ num, src, district, title, isWatered, isLighted }) => {\n  const [isWater, setIsWater] = useState<boolean>(isWatered);\n  const [isLight, setIsLight] = useState<boolean>(isLighted);\n\n  const waterHandler = () => {\n    setIsWater(!isWater);\n  };\n\n  const lightHandler = () => {\n    setIsLight(!isLight);\n  };\n\n  return (\n    <Link href={`/lists/${num}`}>\n      <div className=\"flex flex-row w-4/5 m-auto h-32 bg-white shadow-2xl rounded-2xl items-center justify-between px-5 active:bg-green-50 \">\n        <Image className=\"h-full flex items-center rounded-2xl\" src={src} width={100} height={100} />\n        <div className=\"flex flex-col flex-grow ml-7\">\n          <span className=\"font-light text-sm \">{district}</span>\n          <span className=\"font-normal text-2xl\">{title}</span>\n        </div>\n        <div className=\"flex flex-row h-full items-end mb-7\">\n          {/*<svg onClick={waterHandler} width=\"35\" height=\"35\" viewBox=\"0 0 35 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n          {/*  <path*/}\n          {/*    d=\"M23.7891 6.53526C22.099 4.58451 20.201 2.82408 18.1289 1.28526C17.944 1.15768 17.7247 1.08936 17.5 1.08936C17.2753 1.08936 17.056 1.15768 16.8711 1.28526C14.799 2.82408 12.901 4.58451 11.2109 6.53526C7.45117 10.8419 5.46875 15.3946 5.46875 19.6876C5.46875 22.8785 6.73632 25.9387 8.99262 28.195C11.2489 30.4513 14.3091 31.7189 17.5 31.7189C20.6909 31.7189 23.7511 30.4513 26.0074 28.195C28.2637 25.9387 29.5312 22.8785 29.5312 19.6876C29.5312 15.3946 27.5488 10.8419 23.7891 6.53526ZM25.0469 20.9728C24.7817 22.5357 24.0362 23.9772 22.914 25.097C21.7918 26.2167 20.3487 26.959 18.7852 27.2208H18.6074C18.3318 27.2222 18.0659 27.1195 17.8628 26.9332C17.6597 26.7469 17.5343 26.4909 17.5119 26.2162C17.4894 25.9415 17.5715 25.6685 17.7417 25.4517C17.9118 25.2349 18.1575 25.0904 18.4297 25.047C19.5441 24.8604 20.5725 24.3307 21.3715 23.5317C22.1704 22.7328 22.7002 21.7044 22.8867 20.59C22.9115 20.4479 22.964 20.3122 23.0414 20.1906C23.1188 20.0689 23.2195 19.9638 23.3377 19.8812C23.4558 19.7986 23.5891 19.7402 23.73 19.7093C23.8708 19.6784 24.0163 19.6757 24.1582 19.7013C24.3011 19.7243 24.4378 19.7758 24.5604 19.8526C24.683 19.9295 24.7888 20.0303 24.8717 20.1489C24.9546 20.2675 25.0128 20.4015 25.0429 20.543C25.073 20.6846 25.0744 20.8307 25.0469 20.9728Z\"*/}\n          {/*    fill={`${isWater ? '#646464' : '#D3E5FF'}`}*/}\n          {/*  />*/}\n          {/*</svg>*/}\n          {/*<svg onClick={lightHandler} width=\"35\" height=\"35\" viewBox=\"0 0 35 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n          {/*  <path*/}\n          {/*    d=\"M24.0625 31.7186C24.0625 32.0087 23.9473 32.2869 23.7421 32.492C23.537 32.6971 23.2588 32.8124 22.9687 32.8124H12.0312C11.7412 32.8124 11.463 32.6971 11.2578 32.492C11.0527 32.2869 10.9375 32.0087 10.9375 31.7186C10.9375 31.4285 11.0527 31.1503 11.2578 30.9452C11.463 30.7401 11.7412 30.6249 12.0312 30.6249H22.9687C23.2588 30.6249 23.537 30.7401 23.7421 30.9452C23.9473 31.1503 24.0625 31.4285 24.0625 31.7186ZM29.5312 14.2186C29.5349 16.041 29.123 17.8403 28.327 19.4796C27.531 21.119 26.3718 22.5554 24.9375 23.6795C24.6666 23.884 24.4467 24.1484 24.2949 24.452C24.1431 24.7556 24.0635 25.0901 24.0625 25.4295V26.2499C24.0625 26.83 23.832 27.3864 23.4218 27.7967C23.0116 28.2069 22.4552 28.4374 21.875 28.4374H13.125C12.5448 28.4374 11.9884 28.2069 11.5782 27.7967C11.168 27.3864 10.9375 26.83 10.9375 26.2499V25.4295C10.9366 25.0949 10.8598 24.7648 10.713 24.4641C10.5662 24.1633 10.3531 23.8998 10.0898 23.6932C8.65849 22.5768 7.49898 21.1503 6.69856 19.521C5.89814 17.8918 5.47766 16.1022 5.46874 14.287C5.42773 7.76548 10.7051 2.33775 17.2129 2.18736C18.8173 2.14719 20.4136 2.42881 21.9074 3.01559C23.4013 3.60238 24.7624 4.48245 25.9106 5.60386C27.0588 6.72528 27.9707 8.06532 28.5925 9.54491C29.2144 11.0245 29.5336 12.6137 29.5312 14.2186ZM25.0469 12.9335C24.7817 11.3705 24.0362 9.92899 22.914 8.80925C21.7918 7.68951 20.3487 6.94717 18.7851 6.68541C18.6433 6.66207 18.4983 6.66689 18.3583 6.69961C18.2183 6.73232 18.0862 6.79229 17.9694 6.87608C17.8526 6.95987 17.7534 7.06584 17.6776 7.18795C17.6017 7.31006 17.5507 7.44591 17.5273 7.58775C17.504 7.72959 17.5088 7.87463 17.5415 8.01461C17.5743 8.15458 17.6342 8.28674 17.718 8.40354C17.8018 8.52034 17.9078 8.61949 18.0299 8.69533C18.152 8.77117 18.2878 8.82222 18.4297 8.84556C19.5441 9.03213 20.5725 9.56184 21.3715 10.3608C22.1704 11.1598 22.7001 12.1882 22.8867 13.3026C22.9318 13.5561 23.0648 13.7855 23.2623 13.9506C23.4599 14.1156 23.7094 14.2057 23.9668 14.2049H24.1582C24.301 14.1819 24.4378 14.1305 24.5604 14.0536C24.683 13.9767 24.7888 13.8759 24.8717 13.7573C24.9546 13.6387 25.0128 13.5047 25.0429 13.3632C25.073 13.2216 25.0743 13.0755 25.0469 12.9335Z\"*/}\n          {/*    fill={`${isLight ? '#646464' : '#FFC700'}`}*/}\n          {/*  />*/}\n          {/*</svg>*/}\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default PlantBox;\n","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/plant-data-box.tsx",["98"],[],"import React from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\n\ninterface IPlantDataBoxProps {\n  num: number;\n  src: string;\n  title: string;\n  description: string;\n}\n\nconst PlantDataBox: React.FC<IPlantDataBoxProps> = ({ num, src, title, description }) => {\n  return (\n    <Link href={`/search/${num}`}>\n      <div className=\"w-4/5 h-24 m-auto flex flex-row justify-between items-center bg-white px-4 rounded-3xl shadow-lg select-none cursor-pointer\">\n        <div className=\"basis-1/5  flex items-center\">\n          <Image className=\"rounded-full\" src={src} height={72} width={72} />\n        </div>\n        <div className=\"basis-4/5 ml-3 flex flex-col\">\n          <h1 className=\"font-semibold text-lg\">{title}</h1>\n          <p className=\"text-xs text-ellipsis line-clamp-3 text-gray-500\">{description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default PlantDataBox;\n","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/_document.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/diary/create.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/diary/index.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/index.tsx",["99"],[],"import React from 'react';\nimport { useRouter } from 'next/router';\nimport Image from 'next/image';\nimport { useQuery } from 'react-query';\nimport Link from 'next/link';\nimport { getGarden, waterCommand } from '../../../components/api';\nimport axios from 'axios';\n\ninterface GardenResponse {\n  id: number;\n  image: string;\n  section: string;\n  name: string;\n  period: number;\n  humidity: number;\n  is_water: boolean;\n  is_turn_on: boolean;\n}\n\nconst ListDetail: React.FC = () => {\n  const router = useRouter();\n  const { data, isLoading } = useQuery<GardenResponse>(['garden', router.query.id], () => getGarden(router.query.id));\n\n  if (isLoading) {\n    return <div></div>;\n  }\n\n  const onWaterClick = async () => {\n    alert(`${data?.id}에 물을 주겠습니다!`);\n    await waterCommand(data?.id, {\n      location: data?.section,\n      command: 'water',\n      command_kor: `${data?.id}번 위치에 물주기를 완료하였습니다! `,\n      is_done: false,\n    });\n  };\n\n  return (\n    <div className=\"w-full h-full py-5\">\n      <div className=\"flex flex-col w-4/5 h-5/6 m-auto bg-white items-center justify-evenly rounded-3xl shadow-2xl gap-2\">\n        <div onClick={router.back} className=\"w-full flex items-center mt-3 ml-3 select-none cursor-pointer\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 hover:scale-125\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth=\"2\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n          </svg>\n        </div>\n        <span className=\"block text-xl text-gray-500  font-normal\">{data?.section} 구역</span>\n        <div className=\"relative\">\n          <Image className=\"rounded-2xl\" src={data?.image ?? ''} width={200} height={200} />\n          {/*<div className=\"absolute -right-4 -bottom-4 rounded-full bg-white w-12 h-12 shadow-xl\">*/}\n          {/*  <div className=\"w-full h-full flex justify-center items-center\">*/}\n          {/*    <svg className=\"w-6 h-6\" width=\"25\" height=\"31\" viewBox=\"0 0 25 31\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">*/}\n          {/*      <path*/}\n          {/*        d=\"M19.0625 29.7186C19.0625 30.0087 18.9473 30.2869 18.7421 30.492C18.537 30.6971 18.2588 30.8124 17.9687 30.8124H7.03124C6.74116 30.8124 6.46296 30.6971 6.25784 30.492C6.05273 30.2869 5.93749 30.0087 5.93749 29.7186C5.93749 29.4285 6.05273 29.1503 6.25784 28.9452C6.46296 28.7401 6.74116 28.6249 7.03124 28.6249H17.9687C18.2588 28.6249 18.537 28.7401 18.7421 28.9452C18.9473 29.1503 19.0625 29.4285 19.0625 29.7186ZM24.5312 12.2186C24.5349 14.041 24.123 15.8403 23.327 17.4796C22.531 19.119 21.3718 20.5554 19.9375 21.6795C19.6666 21.884 19.4467 22.1484 19.2949 22.452C19.1431 22.7556 19.0635 23.0901 19.0625 23.4295V24.2499C19.0625 24.83 18.832 25.3864 18.4218 25.7967C18.0116 26.2069 17.4552 26.4374 16.875 26.4374H8.12499C7.54483 26.4374 6.98843 26.2069 6.5782 25.7967C6.16796 25.3864 5.93749 24.83 5.93749 24.2499V23.4295C5.93656 23.0949 5.8598 22.7648 5.71299 22.4641C5.56617 22.1633 5.35312 21.8998 5.08984 21.6932C3.65849 20.5768 2.49898 19.1503 1.69856 17.521C0.898144 15.8918 0.477658 14.1022 0.468743 12.287C0.427728 5.76548 5.70507 0.33775 12.2129 0.187359C13.8173 0.147188 15.4136 0.428805 16.9074 1.01559C18.4013 1.60238 19.7624 2.48245 20.9106 3.60386C22.0588 4.72528 22.9707 6.06532 23.5925 7.54491C24.2144 9.0245 24.5336 10.6137 24.5312 12.2186ZM20.0469 10.9335C19.7817 9.37051 19.0362 7.92899 17.914 6.80925C16.7918 5.68951 15.3487 4.94717 13.7851 4.68541C13.6433 4.66207 13.4983 4.66689 13.3583 4.69961C13.2183 4.73232 13.0862 4.79229 12.9694 4.87608C12.8526 4.95987 12.7534 5.06584 12.6776 5.18795C12.6017 5.31006 12.5507 5.44591 12.5273 5.58775C12.504 5.72959 12.5088 5.87463 12.5415 6.01461C12.5743 6.15458 12.6342 6.28674 12.718 6.40354C12.8018 6.52034 12.9078 6.61949 13.0299 6.69533C13.152 6.77117 13.2878 6.82222 13.4297 6.84556C14.5441 7.03213 15.5725 7.56184 16.3715 8.36081C17.1704 9.15978 17.7001 10.1882 17.8867 11.3026C17.9318 11.5561 18.0648 11.7855 18.2623 11.9506C18.4599 12.1156 18.7094 12.2057 18.9668 12.2049H19.1582C19.301 12.1819 19.4378 12.1305 19.5604 12.0536C19.683 11.9767 19.7888 11.8759 19.8717 11.7573C19.9546 11.6387 20.0128 11.5047 20.0429 11.3632C20.073 11.2216 20.0743 11.0755 20.0469 10.9335V10.9335Z\"*/}\n          {/*        fill={`${data?.is_turn_on ? '#FFC700' : '#646464'}`}*/}\n          {/*      />*/}\n          {/*    </svg>*/}\n          {/*  </div>*/}\n          {/*</div>*/}\n        </div>\n        <h2 className=\"text-xl font-normal text-gray-500\">{data?.name}</h2>\n        <span className=\"text-md font-light text-gray-400\">물주기: {data?.period}일</span>\n        <div className=\"relative w-36 h-36 flex flex-col justify-center items-center\">\n          <div className=\"z-0 absolute w-full h-full bg-[#ECF1FA] rounded-full blur-md opacity-90\" />\n          <div className=\"z-10 flex flex-col justify-center items-center gap-1\">\n            <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M27.1875 7.46852C25.256 5.23909 23.0869 3.22717 20.7188 1.46852C20.5074 1.32272 20.2567 1.24463 20 1.24463C19.7433 1.24463 19.4926 1.32272 19.2812 1.46852C16.9131 3.22717 14.744 5.23909 12.8125 7.46852C8.51562 12.3904 6.25 17.5935 6.25 22.4998C6.25 26.1465 7.69866 29.6439 10.2773 32.2225C12.8559 34.8011 16.3533 36.2498 20 36.2498C23.6467 36.2498 27.1441 34.8011 29.7227 32.2225C32.3013 29.6439 33.75 26.1465 33.75 22.4998C33.75 17.5935 31.4844 12.3904 27.1875 7.46852ZM28.625 23.9685C28.3219 25.7547 27.4699 27.4022 26.1874 28.6819C24.9049 29.9616 23.2556 30.81 21.4687 31.1091H21.2656C20.9507 31.1107 20.6467 30.9933 20.4146 30.7805C20.1825 30.5676 20.0393 30.2749 20.0136 29.961C19.9879 29.6471 20.0817 29.3351 20.2762 29.0873C20.4706 28.8396 20.7515 28.6744 21.0625 28.6248C22.3361 28.4116 23.5114 27.8062 24.4245 26.8931C25.3377 25.9799 25.943 24.8046 26.1562 23.531C26.1845 23.3687 26.2446 23.2136 26.3331 23.0746C26.4215 22.9356 26.5366 22.8154 26.6716 22.721C26.8067 22.6266 26.959 22.5599 27.12 22.5246C27.2809 22.4893 27.4472 22.4862 27.6094 22.5154C27.7726 22.5417 27.9289 22.6005 28.069 22.6884C28.2091 22.7763 28.3301 22.8914 28.4248 23.0269C28.5196 23.1625 28.5861 23.3157 28.6205 23.4774C28.6549 23.6392 28.6564 23.8062 28.625 23.9685Z\"\n                fill={`${data?.is_water ? '#698acb' : '#646464'}`}\n              />\n            </svg>\n            <span className=\"font-thin text-xl text-gray-600\">{data?.humidity}%RH</span>\n          </div>\n        </div>\n        <button\n          onClick={onWaterClick}\n          className=\"w-24 h-10 border-gray-300 border-[2px] border-opacity-30 rounded-full shadow-2xl text-gray-400 text-md hover:text-gray-500 hover:border-gray-500 hover:border-opacity-60 select-none\"\n        >\n          물주기\n        </button>\n        <div className=\"flex flex-row justify-end items-end gap-3 pb-2 text-sm\">\n          <Link\n            href={{\n              pathname: `/lists/${data?.id}/diary`,\n              query: { section: data?.section },\n            }}\n          >\n            <a className=\"text-gray-400 border-b-[1px] border-gray-400 select-none cursor-pointer\">식물일기</a>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListDetail;\n","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/lists/[id]/timelapse/index.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/pages/search/[id].tsx",["100"],[],"import { NextPage } from 'next';\nimport Image from 'next/image';\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from 'react-query';\nimport { getFlowerDetail } from '../../components/api';\n\ninterface FlowerResponse {\n  id: number;\n  name: string;\n  month: number;\n  day: number;\n  flower_language: string;\n  content: string;\n  usage: string;\n  growth: string;\n  main_image: string;\n}\n\nconst SearchDetail: NextPage = () => {\n  const router = useRouter();\n  const { data, isLoading } = useQuery<FlowerResponse>(['flower', router.query.id], () => getFlowerDetail(router.query.id));\n  return (\n    <div className=\"w-full h-full py-5\">\n      <div className=\"w-4/5 h-5/6 m-auto overflow-y-scroll bg-white rounded-xl shadow-2xl  scrollbar-hide\">\n        {data && (\n          <div className=\"w-full h-full flex flex-col\">\n            <div onClick={router.back} className=\"flex items-center h-10 ml-3 select-none cursor-pointer\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6 hover:scale-125\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M15 19l-7-7 7-7\" />\n              </svg>\n            </div>\n            <div className=\"flex justify-center rounded-2xl\">\n              <Image src={data.main_image} width={180} height={180} />\n            </div>\n            <h2 className=\"text-xl font-normal flex justify-center items-center\">{data.name}</h2>\n            <h3 className=\"text-lg text-blue-300 font-normal flex justify-center items-center\">{data.flower_language}</h3>\n            <span className=\"my-1 text-md font-bold flex justify-center\">내용</span>\n            <p className=\"text-xs mx-3\">{data.content}</p>\n            <span className=\"my-1 text-md font-bold flex justify-center\">기르는 방법</span>\n            <p className=\"text-xs mx-3\">{data.growth}</p>\n            <span className=\"my-1 text-md font-bold flex justify-center\">사용법</span>\n            <p className=\"text-xs mx-3 mb-3\">{data.usage}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchDetail;\n","/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/api.ts",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/back.tsx",[],[],"/Users/junsu/Developer/Projects/2022/TemiProject/smart-gardening/components/diary-box.tsx",["101"],[],"import React from 'react';\nimport Image from 'next/image';\n\ninterface DiaryBoxProps {\n  image: string;\n  date: string;\n  title: string;\n  description: string;\n}\n\nconst DiaryBox: React.FC<DiaryBoxProps> = ({ image, date, title, description }) => {\n  return (\n    <div className=\"flex flex-col mx-5\">\n      <div className=\"flex flex-col\">\n        <div className=\"relative\">\n          <div className=\"absolute w-4 h-4 rounded-full bg-gray-300 top-1 -left-7\" />\n        </div>\n        <span className=\"text-gray-500 text-sm mb-1\">{date}</span>\n      </div>\n      <div className=\"flex flex-row space-x-4\">\n        <div className=\"basis-1/3\">\n          <Image className=\"rounded-2xl\" src={image} width={200} height={200} />\n        </div>\n        <div className=\"basis-2/3 flex flex-col\">\n          <h2 className=\"text-sm\">{title}</h2>\n          <p className=\"text-xs\">{description}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DiaryBox;\n",{"ruleId":"102","severity":1,"message":"103","line":29,"column":9,"nodeType":"104","endLine":29,"endColumn":102},{"ruleId":"102","severity":1,"message":"103","line":17,"column":11,"nodeType":"104","endLine":17,"endColumn":78},{"ruleId":"102","severity":1,"message":"103","line":55,"column":11,"nodeType":"104","endLine":55,"endColumn":93},{"ruleId":"102","severity":1,"message":"103","line":41,"column":15,"nodeType":"104","endLine":41,"endColumn":71},{"ruleId":"102","severity":1,"message":"103","line":22,"column":11,"nodeType":"104","endLine":22,"endColumn":81},"jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]